"""
Created on Tue Jan 21 07:40:01 2020

@author: Marco
"""

import numpy as np
import matplotlib.pyplot as plt
import testset as sigs 
from scipy.fftpack import fft,ifft
from scipy import signal
from scipy.signal import filtfilt
from scipy.fftpack import fft,ifft, fftshift


#se単al
sig_input_sensor=sigs.prueba_Dataset
n_1=len(sig_input_sensor)
plt.plot(sig_input_sensor, color='red', label="se単al")
plt.plot(sig_input_sensor, color='red', label="se単al")
plt.show()


#normalizar la se単al de entrada

signal_prueba_Dataset=np.zeros(len(sigs.prueba_Dataset))
for i,num in enumerate (sigs.prueba_Dataset):
    signal_prueba_Dataset[i]=float(sigs.prueba_Dataset[i]/max(sigs.prueba_Dataset)) 
    
#grafica normalizada
plt.title('Senal prueba_Dataset')
plt.plot(signal_prueba_Dataset,label='Senal prueba_Dataset ')
plt.show()  


# fft transformation to detect frequency spectral for each time series signal
freq_domain_signal = fft(sigs.prueba_Dataset)
plt.stem(freq_domain_signal)
plt.xlim(0,1500)
#plt.ylim(0,8000)
plt.show() 

plt.plot(sigs.prueba_Dataset)
freq_domain_signal = fft(sigs.prueba_Dataset)
plt.stem(freq_domain_signal)
plt.xlim(0,400)
#plt.ylim(0,14000)
plt.show()

freq_domain_signal=np.array(freq_domain_signal)

freq_domain_signal=np.array(freq_domain_signal)
freq=np.abs(freq_domain_signal)
plt.plot(freq)
a=abs(freq[0])


lowpass_coef2=signal.firwin(200,8,pass_zero=True,nyq=101, window='blackman')
plt.plot(lowpass_coef2)
plt.show()
output2=signal.convolve(prueba_Dataset,lowpass_coef2, mode='same')
f,plt_arr=plt.subplots(2,sharex=True)
f.suptitle("FILTRO POR VENTANAS  ")
plt_arr[0].plot(signal_prueba_Dataset,color='blue')
plt_arr[0].set_title("Senal entrada")
plt_arr[1].plot(output2,color='red')
plt_arr[1].set_title("Senal filtrada PASA BAJOS 8 Hz")
plt.show()

    

lowpass_coef3=signal.firwin(90,10,pass_zero=True,nyq=100, window='blackman')
plt.plot(lowpass_coef3)
plt.show()
#convolucion
output3=signal.convolve(signal_ecg,lowpass_coef3, mode='same')
f,plt_arr=plt.subplots(2,sharex=True)
#grafica de resultados
f.suptitle("FILTRO Pasa bajos ")
plt_arr[0].plot(signal_ecg,color='blue')
plt_arr[0].set_title("Senal entrada")
plt_arr[1].plot(output3,color='red')
plt_arr[1].set_title("Senal filtrada PASA BAJOS 10 Hz")
plt.show()
#analisis de frecuencia
freq_domain_signal = fft(output3)
plt.stem(output3)
plt.xlim(0,600)
plt.show()
